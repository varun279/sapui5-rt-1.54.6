sinaDefine(['../core/core','../core/util','./SearchQuery','./ChartQuery','./DataSourceQuery','./SuggestionQuery','./Filter','./DataSource','./ComplexCondition','./SimpleCondition','./AttributeMetadata','./SearchResultSetItemAttribute','./SearchResultSetItem','./SearchResultSet','./AttributeType','./DataSourceType','./SuggestionType','./SuggestionCalculationMode','./FacetType','./MatchingStrategy','./LogicalOperator','./ComparisonOperator','./AttributeUsageType','./FacetResultSet','./FacetResultSetItem','./SearchTermSuggestion','./SearchTermAndDataSourceSuggestion','./DataSourceSuggestion','./ObjectSuggestion','./SuggestionResultSet','./ChartResultSet','./DataSourceResultSet','./ChartResultSetItem','./DataSourceResultSetItem','./EqualsMode','./SortOrder','./Capabilities','./ConditionType','./Configuration','../providers/inav2/typeConverter','./NavigationTarget','./fiori/FioriIntentsResolver','./fiori/NavigationTargetForIntent'],function(c,u,S,C,D,a,F,b,d,e,A,f,g,h,j,k,l,m,n,M,L,o,p,q,r,s,t,v,O,w,x,y,z,B,E,G,H,I,J,K,N,P,Q){return c.defineClass({AttributeType:j,DataSourceType:k,AttributeUsageType:p,MatchingStrategy:M,LogicalOperator:L,ComparisonOperator:o,FacetType:n,SuggestionCalculationMode:m,SuggestionType:l,EqualsMode:E,SortOrder:G,ConditionType:I,_init:function(i){this.core=c;this.util=u;this.inav2TypeConverter=K;this.provider=i;this.createSearchQuery=this.generateFactoryMethod(S);this.createChartQuery=this.generateFactoryMethod(C);this.createSuggestionQuery=this.generateFactoryMethod(a);this.createDataSourceQuery=this.generateFactoryMethod(D);this.createFilter=this.generateFactoryMethod(F);this.createComplexCondition=this.generateFactoryMethod(d);this.createSimpleCondition=this.generateFactoryMethod(e);this._createAttributeMetadata=this.generateFactoryMethod(A);this._createSearchResultSetItemAttribute=this.generateFactoryMethod(f);this._createSearchResultSetItem=this.generateFactoryMethod(g);this._createSearchResultSet=this.generateFactoryMethod(h);this._createSearchTermSuggestion=this.generateFactoryMethod(s);this._createSearchTermAndDataSourceSuggestion=this.generateFactoryMethod(t);this._createDataSourceSuggestion=this.generateFactoryMethod(v);this._createObjectSuggestion=this.generateFactoryMethod(O);this._createSuggestionResultSet=this.generateFactoryMethod(w);this._createChartResultSet=this.generateFactoryMethod(x);this._createDataSourceResultSet=this.generateFactoryMethod(y);this._createChartResultSetItem=this.generateFactoryMethod(z);this._createDataSourceResultSetItem=this.generateFactoryMethod(B);this._createCapabilities=this.generateFactoryMethod(H);this._createConfiguration=this.generateFactoryMethod(J);this._createNavigationTarget=this.generateFactoryMethod(N);this._createFioriIntentsResolver=this.generateFactoryMethod(P);this._createNavigationTargetForIntent=this.generateFactoryMethod(Q);this.dataSources=[];this.dataSourceMap={};this.allDataSource=this._createDataSource({id:'All',label:'All',type:this.DataSourceType.Category});},_initAsync:function(i){i.sina=this;this.isDummyProvider=i.provider.indexOf("dummy")>-1;return this.provider._initAsync.apply(this.provider,[i]).then(function(R){R=R||{};this.capabilities=R.capabilities||this._createCapabilities();if(this.getBusinessObjectDataSources().length===0&&!this.isDummyProvider){return Promise.reject(new c.Exception('Not active - no datasources'));}}.bind(this));},loadMetadata:function(i){if(this.provider.loadMetadata){return this.provider.loadMetadata(i);}return c.Promise.resolve();},createDataSourceMap:function(R){var T={};for(var i=0;i<R.length;++i){var U=R[i];T[U.id]=U;}return T;},generateFactoryMethod:function(i){return function(R){R=R||{};R.sina=this;return new i(R);};},_createDataSource:function(R){R=R||{};if(!R.providerId||R.providerId===this.provider.id){R.sina=this;}else{var T=this.provider.multiSina;for(var i=0;i<T.length;i++){if(R.providerId===T[i].provider.id){R.sina=T[i];R.attributesMetadata=(R.type===R.sina.DataSourceType.BusinessObject)?[{id:'dummy'}]:[];break;}}}var U=new b(R);if(this.dataSourceMap[U.id]===U){throw new c.Exception('cannot create an already existing datasource: "'+U.id+'"');}this.dataSources.push(U);this.dataSourceMap[U.id]=U;return U;},getAllDataSource:function(){return this.allDataSource;},getBusinessObjectDataSources:function(){var R=[];for(var i=0;i<this.dataSources.length;++i){var T=this.dataSources[i];if(!T.hidden&&T.type===this.DataSourceType.BusinessObject){R.push(T);}}return R;},getDataSource:function(i){var R;if(this.provider.parentSina){R=this.provider.parentSina.dataSourceMap[i];}if(!R){R=this.dataSourceMap[i];}return R;},getConfigurationAsync:function(i){if(!this.provider.getConfigurationAsync){return c.Promise.resolve(this._createConfiguration({personalizedSearch:false,isPersonalizedSearchEditable:false}));}i=i||{};if(this.configurationPromise&&!i.forceReload){return this.configurationPromise;}this.configurationPromise=this.provider.getConfigurationAsync();return this.configurationPromise;},logUserEvent:function(i){if(!this.provider.logUserEvent){return;}this.provider.logUserEvent(i);},getDebugInfo:function(){var i=['Sina Provider:'+this.provider.id];if(this.provider.getDebugInfo){var R=this.provider.getDebugInfo();if(R){i.push(R);}}return i.join('\n');},parseDataSourceFromJson:function(i){var R=this.getDataSource(i.id);if(R){return R;}if(i.type!==this.DataSourceType.Category){throw new c.Exception('Datasource in URL does not exist '+i.id);}R=this._createDataSource(i);return R;},parseSimpleConditionFromJson:function(i){var R;if(c.isObject(i.value)){R=u.dateFromJson(i.value);}else{R=i.value;}return this.createSimpleCondition({operator:i.operator,attribute:i.attribute,value:R,attributeLabel:i.attributeLabel,valueLabel:i.valueLabel,userDefined:i.userDefined?true:false});},parseComplexConditionFromJson:function(R){var T=[];for(var i=0;i<R.conditions.length;++i){var U=R.conditions[i];T.push(this.parseConditionFromJson(U));}return this.createComplexCondition({operator:R.operator,conditions:T,attributeLabel:R.attributeLabel,valueLabel:R.valueLabel,userDefined:R.userDefined?true:false});},parseConditionFromJson:function(i){switch(i.type){case'Simple':return this.parseSimpleConditionFromJson(i);case'Complex':return this.parseComplexConditionFromJson(i);default:throw new c.Exception('unknown condition type "'+condition.type+'"');}},parseFilterFromJson:function(i){return this.createFilter({searchTerm:i.searchTerm,rootCondition:this.parseConditionFromJson(i.rootCondition),dataSource:this.parseDataSourceFromJson(i.dataSource)});}});});
